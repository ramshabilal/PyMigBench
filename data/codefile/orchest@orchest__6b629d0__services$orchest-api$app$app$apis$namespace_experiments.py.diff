diff --git a/services/orchest-api/app/app/apis/namespace_experiments.py b/services/orchest-api/app/app/apis/namespace_experiments.py
        index 767e45d497aff0d8506cb6fb8b16e4a3ded1d44d..6b629d0d0dc7d44113e75a8a3f97a1c68d2ee131 100644
        --- a/services/orchest-api/app/app/apis/namespace_experiments.py
        +++ b/services/orchest-api/app/app/apis/namespace_experiments.py
@@ -5,7 +5,7 @@ from datetime import datetime
 from celery.contrib.abortable import AbortableAsyncResult
 from docker import errors
 from flask import abort, current_app, request
-from flask_restplus import Namespace, Resource
+from flask_restx import Namespace, Resource
 
 import app.models as models
 from app import schema
@@ -37,14 +37,16 @@ class ExperimentList(Resource):
     @api.marshal_with(schema.experiment, code=201, description="Queued experiment")
     def post(self):
         """Queues a new experiment."""
-        # TODO: possibly use marshal() on the post_data
+        # TODO: possibly use marshal() on the post_data. Note that we
+        # have moved over to using flask_restx
         # https://flask-restplus.readthedocs.io/en/stable/api.html#flask_restplus.marshal
         #       to make sure the default values etc. are filled in.
         post_data = request.get_json()
 
         # TODO: maybe we can expect a datetime (in the schema) so we
-        #       do not have to parse it here.
-        #       https://flask-restplus.readthedocs.io/en/stable/api.html#flask_restplus.fields.DateTime
+        #       do not have to parse it here. Again note that we are now
+        #       using flask_restx
+        # https://flask-restplus.readthedocs.io/en/stable/api.html#flask_restplus.fields.DateTime
         scheduled_start = post_data["scheduled_start"]
         scheduled_start = datetime.fromisoformat(scheduled_start)
 
