diff --git a/tcconfig/_logger.py b/tcconfig/_logger.py
        index 9a009be2107f3590dfac23c214a189f900d45ce2..7ba8676b3b9347ef15142bfeba30d611822c154d 100644
        --- a/tcconfig/_logger.py
        +++ b/tcconfig/_logger.py
@@ -3,62 +3,44 @@
 """
 
 
-import logbook
+import sys
+
 import simplesqlite
 import subprocrunner
+from loguru import logger
 
 
-def _disable_logger(l):
-    try:
-        l.disable()
-    except AttributeError:
-        l.disabled = True  # to support Logbook<1.0.0
-
-
-logger = logbook.Logger("tcconfig")
-_disable_logger(logger)
+MODULE_NAME = "tcconfig"
 
+logger.disable(MODULE_NAME)
 
-def set_logger(is_enable):
-    if is_enable != logger.disabled:
-        # logger setting have not changed
-        return
 
+def set_logger(is_enable, propagation_depth=3):
     if is_enable:
-        try:
-            logger.enable()
-        except AttributeError:
-            logger.disabled = False  # to support Logbook<1.0.0
+        logger.enable(MODULE_NAME)
     else:
-        _disable_logger(logger)
+        logger.disable(MODULE_NAME)
+
+    if propagation_depth <= 0:
+        return
 
     simplesqlite.set_logger(is_enable)
     subprocrunner.set_logger(is_enable)
 
 
 def set_log_level(log_level):
-    """
-    Set logging level of this module. The module using
-    `logbook <https://logbook.readthedocs.io/en/stable/>`__ module for logging.
-
-    :param int log_level:
-        One of the log level of the
-        `logbook <https://logbook.readthedocs.io/en/stable/api/base.html>`__.
-        Disabled logging if the ``log_level`` is ``logbook.NOTSET``.
-    :raises LookupError: If ``log_level`` is an invalid value.
-    """
+    if log_level == "DEBUG":
+        log_format = (
+            "<level>{level: <8}</level> | "
+            "<cyan>{name}</cyan>:<cyan>{function}</cyan>:<cyan>{line}</cyan> - <level>{message}</level>"
+        )
+    else:
+        log_format = "<level>[{level}]</level> {message}"
 
-    # validate log level
-    logbook.get_level_name(log_level)
+    logger.remove()
+    logger.add(sys.stderr, colorize=True, format=log_format, level=log_level)
 
-    if log_level == logger.level:
-        return
-
-    if log_level == logbook.NOTSET:
+    if log_level == "QUIET":
         set_logger(is_enable=False)
     else:
         set_logger(is_enable=True)
-
-    logger.level = log_level
-    simplesqlite.set_log_level(log_level)
-    subprocrunner.set_log_level(log_level)
