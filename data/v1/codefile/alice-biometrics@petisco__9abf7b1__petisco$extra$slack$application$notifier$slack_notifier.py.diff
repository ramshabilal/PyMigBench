diff --git a/petisco/extra/slack/application/notifier/slack_notifier.py b/petisco/extra/slack/application/notifier/slack_notifier.py
        index 9e680d2d654faaffa1e233f911f77a7c0b779b0e..9abf7b1f6ef8c55bdddcb9a5c2eff513f6a93130 100644
        --- a/petisco/extra/slack/application/notifier/slack_notifier.py
        +++ b/petisco/extra/slack/application/notifier/slack_notifier.py
@@ -1,15 +1,21 @@
 from typing import Optional
 
-from slack import WebClient
-from slack.errors import SlackApiError
+from slack_sdk import WebClient
+from slack_sdk.errors import SlackApiError
 
 from petisco.base.application.notifier.notifier import Notifier
+from petisco.base.application.notifier.notifier_exception_message import (
+    NotifierExceptionMessage,
+)
 from petisco.base.application.notifier.notifier_message import NotifierMessage
 from petisco.base.domain.errors.domain_error import DomainError
 from petisco.extra.slack.application.notifier.blocks_slack_notifier_message_converter import (
     BlocksSlackNotifierMessageConverter,
     SlackNotifierMessageConverter,
 )
+from petisco.extra.slack.application.notifier.exception_blocks_slack_notifier_message_converter import (
+    ExceptionBlocksSlackNotifierMessageConverter,
+)
 
 
 class SlackError(DomainError):
@@ -24,19 +30,31 @@ class SlackNotifier(Notifier):
         converter: Optional[
             SlackNotifierMessageConverter
         ] = BlocksSlackNotifierMessageConverter(),
+        exception_converter: Optional[
+            SlackNotifierMessageConverter
+        ] = ExceptionBlocksSlackNotifierMessageConverter(),
     ):
-        self.token = token
         self.channel = channel
         self.converter = converter
+        self.exception_converter = exception_converter
+        self.client = WebClient(token=token)
 
     def publish(self, notifier_message: NotifierMessage):
+        try:
+            self.client.chat_postMessage(
+                channel=self.channel,
+                blocks=self.converter.convert(notifier_message),
+                text=notifier_message.title,
+            )
+        except SlackApiError as e:
+            raise SlackError(e.response["error"])
 
-        client = WebClient(token=self.token)
-
+    def publish_exception(self, notifier_exception_message: NotifierExceptionMessage):
         try:
-            client.chat_postMessage(
+            self.client.chat_postMessage(
                 channel=self.channel,
-                blocks=self.converter.convert(notifier_message=notifier_message),
+                blocks=self.exception_converter.convert(notifier_exception_message),
+                text=notifier_exception_message.title,
             )
         except SlackApiError as e:
             raise SlackError(e.response["error"])
