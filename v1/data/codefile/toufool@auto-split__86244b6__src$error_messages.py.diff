diff --git a/src/error_messages.py b/src/error_messages.py
        index a43c20e4d2b01d4642956e22c666eb23b7e25471..86244b6c190f48200826788fa6af4bd8d26b230f 100644
        --- a/src/error_messages.py
        +++ b/src/error_messages.py
@@ -1,142 +1,93 @@
 # Error messages
-from PyQt5 import QtWidgets
+from PyQt6 import QtWidgets
 
-def splitImageDirectoryError(self):
+
+def setTextMessage(message: str):
     msgBox = QtWidgets.QMessageBox()
     msgBox.setWindowTitle('Error')
-    msgBox.setText("No split image folder is selected.")
-    msgBox.exec_()
+    msgBox.setText(message)
+    msgBox.exec()
+
+
+def splitImageDirectoryError(self):
+    setTextMessage("No split image folder is selected.")
+
 
 def splitImageDirectoryNotFoundError(self):
-    msgBox = QtWidgets.QMessageBox()
-    msgBox.setWindowTitle('Error')
-    msgBox.setText("The Split Image Folder does not exist.")
-    msgBox.exec_()
+    setTextMessage("The Split Image Folder does not exist.")
 
 
 def imageTypeError(self, image):
-    msgBox = QtWidgets.QMessageBox()
-    msgBox.setWindowTitle('Error')
-    msgBox.setText(
-        '"' + image + '" is not a valid image file or the full image file path contains a special character.')
-    msgBox.exec_()
+    setTextMessage('"' + image + '" is not a valid image file or the full image file path contains a special character.')
 
 
 def regionError(self):
-    msgBox = QtWidgets.QMessageBox()
-    msgBox.setWindowTitle('Error')
-    msgBox.setText("No region is selected or the Capture Region window is not open. Select a region or load settings while the Capture Region window is open.")
-    msgBox.exec_()
+    setTextMessage("No region is selected or the Capture Region window is not open. Select a region or load settings while the Capture Region window is open.")
 
 
 def regionSizeError(self):
-    msgBox = QtWidgets.QMessageBox()
-    msgBox.setWindowTitle('Error')
-    msgBox.setText("Width and height cannot be 0. Please select a larger region.")
-    msgBox.exec_()
+    setTextMessage("Width and height cannot be 0. Please select a larger region.")
 
 
 def splitHotkeyError(self):
-    msgBox = QtWidgets.QMessageBox()
-    msgBox.setWindowTitle('Error')
-    msgBox.setText("No split hotkey has been set.")
-    msgBox.exec_()
+    setTextMessage("No split hotkey has been set.")
+
 
 def pauseHotkeyError(self):
-    msgBox = QtWidgets.QMessageBox()
-    msgBox.setWindowTitle('Error')
-    msgBox.setText("Your split image folder contains an image filename with a pause flag {p}, but no pause hotkey is set.")
-    msgBox.exec_()
+    setTextMessage("Your split image folder contains an image filename with a pause flag {p}, but no pause hotkey is set.")
+
 
 def customThresholdError(self, image):
-    msgBox = QtWidgets.QMessageBox()
-    msgBox.setWindowTitle('Error')
-    msgBox.setText("\"" + image + "\" doesn't have a valid custom threshold.")
-    msgBox.exec_()
+    setTextMessage("\"" + image + "\" doesn't have a valid custom threshold.")
 
 
 def customPauseError(self, image):
-    msgBox = QtWidgets.QMessageBox()
-    msgBox.setWindowTitle('Error')
-    msgBox.setText("\"" + image + "\" doesn't have a valid custom pause time.")
-    msgBox.exec_()
+    setTextMessage("\"" + image + "\" doesn't have a valid custom pause time.")
 
 
 def alphaChannelError(self, image):
-    msgBox = QtWidgets.QMessageBox()
-    msgBox.setWindowTitle('Error')
-    msgBox.setText("\"" + image + "\" is marked with mask flag but it doesn't have transparency.")
-    msgBox.exec_()
+    setTextMessage("\"" + image + "\" is marked with mask flag but it doesn't have transparency.")
 
 
 def alignRegionImageTypeError(self):
-    msgBox = QtWidgets.QMessageBox()
-    msgBox.setWindowTitle('Error')
-    msgBox.setText("File not a valid image file")
-    msgBox.exec_()
+    setTextMessage("File not a valid image file")
 
 
 def alignmentNotMatchedError(self):
-    msgBox = QtWidgets.QMessageBox()
-    msgBox.setWindowTitle('Error')
-    msgBox.setText("No area in capture region matched reference image. Alignment failed.")
-    msgBox.exec_()
+    setTextMessage("No area in capture region matched reference image. Alignment failed.")
 
 
 def multipleResetImagesError(self):
-    msgBox = QtWidgets.QMessageBox()
-    msgBox.setWindowTitle('Error')
-    msgBox.setText("Only one image with the keyword \"reset\" is allowed.")
-    msgBox.exec_()
+    setTextMessage("Only one image with the keyword \"reset\" is allowed.")
 
 
 def noResetImageThresholdError(self):
-    msgBox = QtWidgets.QMessageBox()
-    msgBox.setWindowTitle('Error')
-    msgBox.setText("Reset Image must have a custom threshold. Please set one and check that it is valid")
-    msgBox.exec_()
+    setTextMessage("Reset Image must have a custom threshold. Please set one and check that it is valid")
 
 
 def resetHotkeyError(self):
-    msgBox = QtWidgets.QMessageBox()
-    msgBox.setWindowTitle('Error')
-    msgBox.setText("Your split image folder contains a reset image, but no reset hotkey is set.")
-    msgBox.exec_()
+    setTextMessage("Your split image folder contains a reset image, but no reset hotkey is set.")
 
 
 def dummySplitsError(self):
-    msgBox = QtWidgets.QMessageBox()
-    msgBox.setWindowTitle('Error')
-    msgBox.setText(
-        "Group dummy splits when undoing/skipping cannot be checked if any split image has a loop parameter greater than 1")
-    msgBox.exec_()
+    setTextMessage("Group dummy splits when undoing/skipping cannot be checked if any split image has a loop parameter greater than 1")
+
 
 def settingsNotFoundError(self):
-    msgBox = QtWidgets.QMessageBox()
-    msgBox.setWindowTitle('Error')
-    msgBox.setText("No settings file found. The settings file is saved when the program is closed.")
-    msgBox.exec_()
+    setTextMessage("No settings file found. The settings file is saved when the program is closed.")
+
 
 def oldVersionSettingsFileError(self):
-    msgBox = QtWidgets.QMessageBox()
-    msgBox.setWindowTitle('Error')
-    msgBox.setText("Old version settings file detected. This version allows settings files from v1.3 and above.")
-    msgBox.exec_()
+    setTextMessage("Old version settings file detected. This version allows settings files from v1.3 and above.")
+
 
 def invalidSettingsError(self):
-    msgBox = QtWidgets.QMessageBox()
-    msgBox.setWindowTitle('Error')
-    msgBox.setText("Invalid settings file.")
-    msgBox.exec_()
+    setTextMessage("Invalid settings file.")
+
 
 def noSettingsFileOnOpenError(self):
-    msgBox = QtWidgets.QMessageBox()
-    msgBox.setWindowTitle('Error')
-    msgBox.setText("No settings file found. One can be loaded on open if placed in the same folder as AutoSplit.exe")
-    msgBox.exec_()
+    setTextMessage("No settings file found. One can be loaded on open if placed in the same folder as AutoSplit.exe")
+
 
 def tooManySettingsFilesOnOpenError(self):
-    msgBox = QtWidgets.QMessageBox()
-    msgBox.setWindowTitle('Error')
-    msgBox.setText("Too many settings files found. Only one can be loaded on open if placed in the same folder as AutoSplit.exe")
-    msgBox.exec_()
+    setTextMessage("Too many settings files found. Only one can be loaded on open if placed in the same folder as AutoSplit.exe")
